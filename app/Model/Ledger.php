<?php

namespace App\Model;

use Illuminate\Database\Eloquent\Model;

use App\Model\Users;
use App\Model\PassengerDetails;
use App\Model\Drivers;
use App\Model\VehicleDetails;
use App\Model\Bookings;
use App\Model\Notification;
use App\Model\BookingDetails;
use App\Model\Entries;
use App\Model\EntryItem;
use App\Model\Group;

class Ledger extends Model
{
	protected $table = 'ledgers';
    public $timestamps = false;
 	protected $fillable = [
                            'id', 'group_id', 'name', 'code', 'op_balance', 'op_balance_dc', 'type', 'reconciliation', 'notes'
                          ];

    // data= bookingId, PassengerId , AccountId, mobileNumber, PassengerName
    // Sales Journal Entry is created
   	public static function saleentries($amount,$triptotal,$remainAmount,$vat,$data)
    {            
        $bookingId=$data['bookingId'];
        $passengerId=$data['passengerId'];
        $passengername=$data['fullName'];
                                         
        $passengercode=$passengerId;

        $today=date("Y-m-d");
                   // Create A ledger if not Existed

                    // $selectledgers="select * from ledgers where code='$passengercode'";
                    // $resultselectledgers=mysql_query($selectledgers);
                    // if(mysql_num_rows($resultselectledgers)==0)
                    // {
                        
                    //     $selectgroup="select * from groups where name like 'passenger'";
                    //     $resultgroup=mysql_query($selectgroup);
                    //      while($rowgroup=mysql_fetch_array($resultgroup))
                    //      {
                    //         $groupid=$rowgroup['id'];
                    //      }
                    
                    //    $insertledger="insert into `ledgers` (`id`,`group_id`,`name`,`code`,`op_balance`,`op_balance_dc`,`type`,`reconciliation`,`notes`)values(NULL,'$groupid','$passengername','$passengercode','0.00','D',0,1,'');";
                    //    $resultinsertledger=mysql_query($insertledger);
                    // }
                    

         $detail="Sales generated by $passengername($passengercode) on $today";
                    // $insertentryqry="INSERT INTO `entries` (`id`, `tag_id`, `entrytype_id`, `number`, `date`, `dr_total`, `cr_total`, `narration`) VALUES (NULL,NULL ,'4', '', '$today', '$amount', '$amount', '$detail')";
        $journalEntry=[
            			'entrytype_id'=>'4',
            			'number'=>$bookingId,
            			'date'=>$today,
            			'dr_total'=>$amount,
            			'cr_total'=>$amount,
            			'narration'=>$detail
        			  ];
      	$entry=Entries::create($journalEntry);
        $entryid=$entry->id;
        $ledgerSales=Ledger::where('name','sales')->first();
        $salesid=$ledgerSales->id;
        $ledgerVat=Ledger::where('name','Vat')->first();
        $vatid=$ledgerVat->id;
       

        $passengerLedger=Ledger::where('code',$passengercode)->first();
        $passengerledgerid=$passengerLedger->id;
        

        $damt=$amount-$vat;
        $triptotal=$triptotal-$vat;
        // $insertentryitem2="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$passengerledgerid','$amount','D','$today')";
        $entryArray1=[
        				'entry_id'=>$entryid,
        				'ledger_id'=>$passengerledgerid,
        				'amount'=>$amount,
        				'dc'=>'D',
        				'reconciliation_date'=>$today
        			];
        $entryItem1=EntryItem::create($entryArray1);
        
        // $insertentryitem="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$salesid','$damt','C','$today')";
    	$entryArray2=[
        				'entry_id'=>$entryid,
        				'ledger_id'=>$salesid,
        				'amount'=>$triptotal,
        				'dc'=>'C',
        				'reconciliation_date'=>$today
        			];
        $entryItem2=EntryItem::create($entryArray2);

		// $insertentryitem1="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$vatid','$vat','C','$today')";
		$entryArray3=[
        				'entry_id'=>$entryid,
        				'ledger_id'=>$vatid,
        				'amount'=>$vat,
        				'dc'=>'C',
        				'reconciliation_date'=>$today
        			];
        $entryItem3=EntryItem::create($entryArray3);   

        if($remainAmount!=0)
        {
            $ledgerCreditor=Ledger::where('name','creditor')->first();
            $creditorId=$ledgerCreditor->id;
            $entryArray4=[
                            'entry_id'=>$entryid,
                            'ledger_id'=>$creditorId,
                            'amount'=>$remainAmount,
                            'dc'=>'C',
                            'reconciliation_date'=>$today
                        ];
            $entryItem4=EntryItem::create($entryArray4);

            $entryArray5=[
                        'entry_id'=>$entryid,
                        'ledger_id'=>$passengerledgerid,
                        'amount'=>$remainAmount,
                        'dc'=>'C',
                        'reconciliation_date'=>$today
                    ];
            $entryItem5=EntryItem::create($entryArray5); 
        }      

    }



    public static function motentries($data)
    {
       $today=date("Y-m-d");
        $bookingid=$data['bookingId'];
                 
        $detail="MOT paid in advance for the Booking $bookingid on $today";
        // $insertentryqry = "INSERT INTO `entries` (`id`, `tag_id`, `entrytype_id`, `number`, `date`, `dr_total`, `cr_total`, `narration`) VALUES (NULL,NULL ,'4', '$bookingid', '$today', '0.5', '0.5', '$detail')";
        // $resultinsertentryqry=mysql_query($insertentryqry);
        $journalEntry=[
            				'entrytype_id'=>'4',
            				'number'=>$bookingid,
            				'date'=>$today,
            				'dr_total'=>'0.5',
            				'cr_total'=>'0.5',
            				'narration'=>$detail
        			   ];
      	$entry=Entries::create($journalEntry);
        $entryid=$entry->id;
        
        $ledgerMot=Ledger::where('name','MOT')->first();
        $motid=$ledgerMot->id;

        $ledgerPrepaidMot=Ledger::where('name','Prepaid MOT')->first();
        $ppmotid=$ledgerPrepaidMot->id;

        // $insertentryitem="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$motid','0.5','D','$today')";
        $entryArray1=[
        				'entry_id'=>$entryid,
        				'ledger_id'=>$motid,
        				'amount'=>'0.5',
        				'dc'=>'D',
        				'reconciliation_date'=>$today
        			];
        $entryItem1=EntryItem::create($entryArray1);

        // $insertentryitem1="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$ppmotid','0.5','C','$today')";
        $entryArray2=[
        				'entry_id'=>$entryid,
        				'ledger_id'=>$ppmotid,
        				'amount'=>'0.5',
        				'dc'=>'C',
        				'reconciliation_date'=>$today
        			];
        $entryItem2=EntryItem::create($entryArray2);
    }

    public static function passengerdriverentries($amount,$data)
    {
        $bookingId=$data['bookingId'];
        $passengerId=$data['passengerId'];
        $driverId=$data['driverId'];
    
        $passengername=$data['fullName'];       
        $passengercode=$passengerId;
                          
        $drivername=$data['driverfullName'];                
        $code=$driverId;
        $today=date("Y-m-d");
                       
        // $selectgroup=Group::where('name','Passenger')->first();
        // $groupid=$selectgroup->id;

        $drivercode=$driverId;
        $detail="Amount given for the trip $bookingId by $passengername($passengercode) on $today to the driver $drivername($drivercode)";
        // $insertentryqry="INSERT INTO `entries` (`id`, `tag_id`, `entrytype_id`, `number`, `date`, `dr_total`, `cr_total`, `narration`) VALUES (NULL,NULL ,'4', '$bookingId', '$today', '$amount', '$amount', '$detail')";
        $journalEntry=[
                            'entrytype_id'=>'4',
                            'number'=>$bookingId,
                            'date'=>$today,
                            'dr_total'=>$amount,
                            'cr_total'=>$amount,
                            'narration'=>$detail
                       ];
        $entry=Entries::create($journalEntry);
        $entryid=$entry->id;
                      
        $ledgerDriver=Ledger::where('code',$drivercode)->first();
        $driverledgerid=$ledgerDriver->id;

        $ledgerPassenger=Ledger::where('code',$passengercode)->first();
        $passengerledgerid=$ledgerPassenger->id;
        
                        
        // $insertentryitem1="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$driverledgerid','$amount','D','$today')";
                        
                      
         $entryArray1=[
                        'entry_id'=>$entryid,
                        'ledger_id'=>$driverledgerid,
                        'amount'=>$amount,
                        'dc'=>'D',
                        'reconciliation_date'=>$today
                    ];
        $entryItem1=EntryItem::create($entryArray1);

        // $insertentryitem2="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$passengerledgerid','$amount','C','$today')";
        $entryArray2=[
                        'entry_id'=>$entryid,
                        'ledger_id'=>$passengerledgerid,
                        'amount'=>$amount,
                        'dc'=>'C',
                        'reconciliation_date'=>$today
                    ];
        $entryItem2=EntryItem::create($entryArray2);         
    }



    public static function commissionentries($driverId,$amount,$vat,$data)
    {
        $today=date("Y-m-d");
       
        $bookingid=$data['bookingId'];
        $drivername=$data['driverfullName'];
                    
        //Admin Percentage or commission
        $percentage=15;                                    
        $damt=$amount-$vat;
        $damt=$damt-($damt*$percentage/100);
        $code=$driverId;           
        $detail="Commission Expenses SAR $damt booked for the $drivername for booking $bookingid on $today";
        // $insertentryqry="INSERT INTO `entries` (`id`, `tag_id`, `entrytype_id`, `number`, `date`, `dr_total`, `cr_total`, `narration`) VALUES (NULL,NULL ,'4', '$bookingid', '$today', '$damt', '$damt', '$detail')";
        $journalEntry=[
                            'entrytype_id'=>'4',
                            'number'=>$bookingid,
                            'date'=>$today,
                            'dr_total'=>$damt,
                            'cr_total'=>$damt,
                            'narration'=>$detail
                       ];
        $entry=Entries::create($journalEntry);
        $entryid=$entry->id;            
        
        $ledgerCommission=Ledger::where('name','Commission exp')->first();
        $commid=$ledgerCommission->id;
         

        $driverledger=Ledger::where('code',$code)->first();
        $driverledgerid=$driverledger->id;           
                    
        $entryArray1=[
                        'entry_id'=>$entryid,
                        'ledger_id'=>$commid,
                        'amount'=>$damt,
                        'dc'=>'D',
                        'reconciliation_date'=>$today
                    ];
        $entryItem1=EntryItem::create($entryArray1);
                // echo $insertentryitem;
        
        // $insertentryitem1="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$driverledgerid','$damt','C','$today')";
        $entryArray2=[
                        'entry_id'=>$entryid,
                        'ledger_id'=>$driverledgerid,
                        'amount'=>$damt,
                        'dc'=>'C',
                        'reconciliation_date'=>$today
                    ];
        $entryItem2=EntryItem::create($entryArray2);         
                   
    }



    public static function commit($driverId,$amountpaid,$paymentmethod)
    {
            $code=$driverId;
            $today=date("Y-m-d");
            

            // if($_POST['cash']>$driveramt)
            // {
                $amt="Received";
                $entry=1;
                //$cashstatus="C";
                $amount=$amountpaid;
                // $pay=$_POST['cash']-$driveramt;
                $detail= "Received Amount  ".$amount." SAR from Driver, ";
            // }
            // else 
            // {
            //     $amt="Paid";
            //     $entry=2;
            //     $amount=$driveramt-$_POST['cash'];   
            //     $pay=$_POST['cash']-$driveramt;
            //     $detail= "Paid Amount  ".$amount."  SAR to Driver ";
            //     //   $detail.="  Included VAT Amount (SAR) ".$_POST['vat'] ;
            // }
            $driverledger=Ledger::where('code',$driverId)->first();
            $ledgerid=$driverledger->id;
                                    
                                    
           
            $paymentEntry=[
                            'entrytype_id'=>$entry,
                            'number'=>$driverId,
                            'date'=>$today,
                            'dr_total'=>$amount,
                            'cr_total'=>$amount,
                            'narration'=>$detail
                       ];
            $entryInserted=Entries::create($paymentEntry);
            $entryid=$entryInserted->id;

              
            if($paymentmethod=="cash")
            {
                $ledger=Ledger::where('name','Cash')->first();
               
            }
            // elseif($_POST['paymentmethod']=="bank")
            // {
            //     if(isset($_POST['bankname']) && ($_POST['bankname']!=""))
            //     {
            //       $selectmethod="select * from ledgers where name  like '".$_POST['bankname']."'";
            //     }
            //     else
            //     {
            //       $selectmethod="select * from ledgers where name  like '".$_POST['paymentmethod']."'";
            //     }
            // }
             
              
            $methodid=$ledger->id;
            
                                    
                                    
              if($entry==1)
              {
                  // $insertentryitem="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$ledgerid','$amount','C','$today')";
                  
                  $entryArray1=[
                        'entry_id'=>$entryid,
                        'ledger_id'=>$ledgerid,
                        'amount'=>$amount,
                        'dc'=>'C',
                        'reconciliation_date'=>$today
                    ];
                    $entryItem1=EntryItem::create($entryArray1);

                    // $insertentryitem2="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$passengerledgerid','$amount','C','$today')";
                    
                 //echo $insertentryitem;
                  // $insertentryitem2="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$methodid','$amount','D','$today')";

                   $entryArray2=[
                                    'entry_id'=>$entryid,
                                    'ledger_id'=>$methodid,
                                    'amount'=>$amount,
                                    'dc'=>'D',
                                    'reconciliation_date'=>$today
                                ];
                    $entryItem2=EntryItem::create($entryArray2); 
                 //  echo $insertentryitem2;
              }
            //   elseif($entry==2)
            //   {
            //        $insertentryitem="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$ledgerid','$amount','D','$today')";
            //   $resultinsertentryitem=mysql_query($insertentryitem);
            // // echo $insertentryitem;
            //   $insertentryitem2="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$methodid','$amount','C','$today')";
            //    $resultinsertentryitem2=mysql_query($insertentryitem2);
            // //s  echo $insertentryitem2;
            //   }
            //  if($_POST['paymentmethod']=='bank')
            //  {
            //       $insertentryitem3="insert into `entryitems`(`id`,`entry_id`,`ledger_id`,`amount`,`dc`,`reconciliation_date`) values (NULL,'$entryid','$methodid','$amount','C','$today')";
            //   $resultinsertentryitem3=mysql_query($insertentryitem3);
            //  }
            //  
            
    }

    
}
